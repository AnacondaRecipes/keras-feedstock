{% set name = "keras" %}
{% set version = "3.0.5" %}

package:
  name: keras
  version: {{ version }}

source:
  url: https://github.com/keras-team/keras/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 0e23205f2d8f434ded17ca9efb116cdb7b6d19736e576456c28aea685a7f195f

build:
  script_env:
    # The default backend is tensorflow, but for this version of keras
    # we do not have the correct version. We update keras and would like
    # to offer at least a working backend: torch.
    - KERAS_BACKEND=torch
  number: 0
  script:
    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-build-isolation -v
  # skipping s390x since dm-tree and jax are not available
  skip: true  # [py<39 or s390x]

requirements:
  host:
    - python
    - pip
    - wheel
    - setuptools
  run:
    - python
    - absl-py
    - numpy
    - rich
    - namex
    - h5py
    - dm-tree
    - ml_dtypes
    # this is not mentioned in the upstream until version 3.3.0
    # but it might have been a bug, because it is indeed used
    # in this version as well at:
    # https://github.com/keras-team/keras/blob/v3.0.5/keras/utils/torch_utils.py#L3
    - packaging
  run_constrained:
    # as suggested in https://keras.io/getting_started/#tensorflow-compatibility
    # tensorflow pinning expands ~=2.16.1
    - tensorflow >=2.16.1,<2.17.0a
    # should be 0.4.20, but this will allow the jax[cuda] version to be installed (0.4.24)
    - jax >=0.4.20, <0.5.0a
    # pytorch should have >=2.1.0,<2.2.0 (expanding ~=2.1.0) but in 
    # https://github.com/keras-team/keras/blob/v3.0.5/requirements.txt#L6
    # https://github.com/keras-team/keras/blob/v3.0.5/keras/utils/torch_utils.py#L156
    # a simple >=2.1.0 lower bound is used.
    - pytorch >=2.1.0

test:
  requires:
    - pip
    - jax  # [not win]
    - pytorch
  commands:
    - pip check
    # the imports section is moved down here so that
    # we can set the backend to torch (tensorflow is
    # the default one, but not available at the moment
    # with the right version)
    - set KERAS_BACKEND=torch     # [win]
    - export KERAS_BACKEND=torch  # [not win]
    - python -c "import keras;"
    - python -c "import keras.backend;"
    - python -c "import keras.datasets;"
    - python -c "import keras.layers;"
    - python -c "import keras.utils;"
    - set KERAS_BACKEND=     # [win]
    - export KERAS_BACKEND=  # [not win]
    # numpy is checked as backend in exports and contest (pytest tests configuration)
    # although not listed in the README among the backends. We add a quick test here.
    #
    # numpy import jax in source code which causes test to fail for win
    - python -c "import os; os.environ['KERAS_BACKEND'] = 'numpy'; import keras;"  # [not win]
    - python -c "import os; os.environ['KERAS_BACKEND'] = 'jax'; import keras;"    # [not win]
    - python -c "import os; os.environ['KERAS_BACKEND'] = 'torch'; import keras;"

about:
  home: https://github.com/fchollet/keras
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Deep Learning for humans
  description: |
    Keras 3 is a multi-backend deep learning framework, with support for JAX, 
    TensorFlow, and PyTorch. Effortlessly build and train models for computer 
    vision, natural language processing, audio processing, timeseries forecasting, 
    recommender systems, etc.
  doc_url: https://keras.io/
  dev_url: https://github.com/fchollet/keras

extra:
  recipe-maintainers:
    - ericdill
    - mariusvniekerk
    - croth1
    - ocefpaf
    - jjhelmus
  skip-lints:
    # The imports section is moved down to the commands
    - missing_imports_or_run_test_py